import Head from 'next/head'
import { Inter } from 'next/font/google'
import styles from '@/styles/Home.module.css'
import { startRegistration } from '@simplewebauthn/browser';
import { PublicKeyCredentialCreationOptionsJSON } from '@simplewebauthn/typescript-types';


const inter = Inter({ subsets: ['latin'] })
function register() {
  // rp: PublicKeyCredentialRpEntity;
  //   user: PublicKeyCredentialUserEntityJSON;
  //   challenge: Base64URLString;
  //   pubKeyCredParams: PublicKeyCredentialParameters[];
  //   timeout?: number;
  //   excludeCredentials?: PublicKeyCredentialDescriptorJSON[];
  //   authenticatorSelection?: AuthenticatorSelectionCriteria;
  //   attestation?: AttestationConveyancePreference;
  //   extensions?: AuthenticationExtensionsClientInputs;
  var challengeid = "1234567890abcdef";
  var userid = "1234567890abcdef";
  let json_data: PublicKeyCredentialCreationOptionsJSON = {
    challenge: challengeid,
    rp: {
      id: "localhost",
      name: "rp name"
    },
    user: {
      id: userid,
      name: "name",
      displayName: "displayName"
    },
    pubKeyCredParams: [
      {
        type: "public-key",
        alg: -7,
      }
    ],
    authenticatorSelection: {
      authenticatorAttachment: "cross-platform",
      userVerification: "discouraged",
      requireResidentKey: false
    },
    // excludeCredentials: [
    //   {
    //     id:userid,
    //     transports: [],
    //     type: "public-key"
    //   }
    // ],
    timeout: 60000,
    attestation: "direct",
  }
  startRegistration(json_data)
}
// function register() {
//   var challengeid = new Uint8Array(16);
//   var userid = new Uint8Array(16);
//   console.log("challengeid: ", challengeid)
//   console.log("userid: ", userid)
//   navigator.credentials.create({
//     publicKey: {
//       challenge: challengeid,
//       rp: {
//         id: "localhost",
//         name: "rp name"
//       },
//       user: {
//         id: userid,
//         name: "name",
//         displayName: "displayName"
//       },
//       pubKeyCredParams: [
//         {
//           type: "public-key",
//           alg: -7,
//         }
//       ],
//       authenticatorSelection: {
//         authenticatorAttachment: "cross-platform",
//         userVerification: "discouraged",
//         requireResidentKey: false
//       },
//       // excludeCredentials: [
//       //   {
//       //     id:userid,
//       //     transports: [],
//       //     type: "public-key"
//       //   }
//       // ],
//       timeout: 60000,
//       attestation: "direct",
//     }
//   }).then((cret) => {
//     console.log(cret)
//     let data = {
//       "id":cret?.id,
//       "type":cret?.type,
//       "rawId": array2b64String(new Uint8Array(cret.rawId)),
//       "clientdata":array2b64String(new Uint8Array(cret.response.clientDataJSON)),
//       "attestationObject": array2b64String(new Uint8Array(cret.response.attestationObject))
//       // "response":cret.response
//       // "response":{
//       //   "clientdata":array2b64String(new Uint8Array(cret.response.clientDataJSON)),
//       //   "attestationObject": array2b64String(new Uint8Array(cret.response.attestationObject))
//       // }
//     }
//     console.log(data)
//     axios.post('http://localhost:3000/',data)
//     // const transports = cred?.response.getTransports()[0];

//   })
// }

export default function Home() {
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div>
          <button onClick={register}>register</button>
        </div>
      </main>
    </>
  )
}
