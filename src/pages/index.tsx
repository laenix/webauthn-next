import Head from 'next/head'
import { Inter } from 'next/font/google'
import styles from '@/styles/Home.module.css'
import { startRegistration, startAuthentication } from '@simplewebauthn/browser';
import { PublicKeyCredentialCreationOptionsJSON, PublicKeyCredentialRequestOptionsJSON } from '@simplewebauthn/typescript-types';
import axios from 'axios'
import { UserOutlined } from '@ant-design/icons';
import { Input, Col, Row, Button, Space } from 'antd';
import React from 'react';
const inter = Inter({ subsets: ['latin'] })
const formRef = React.createRef()
function register() {
  // rp: PublicKeyCredentialRpEntity;
  //   user: PublicKeyCredentialUserEntityJSON;
  //   challenge: Base64URLString;
  //   pubKeyCredParams: PublicKeyCredentialParameters[];
  //   timeout?: number;
  //   excludeCredentials?: PublicKeyCredentialDescriptorJSON[];
  //   authenticatorSelection?: AuthenticatorSelectionCriteria;
  //   attestation?: AttestationConveyancePreference;
  //   extensions?: AuthenticationExtensionsClientInputs;
  axios.get("/api/get_register",).then((res) => {
    var challengeid = res.data.data.challengeid;
    var userid = res.data.data.userid;
    let json_data: PublicKeyCredentialCreationOptionsJSON = {
      challenge: challengeid,
      rp: {
        id: "webauthn.sylu.site",
        name: "rp name"
      },
      user: {
        id: userid,
        name: "name",
        displayName: "displayName"
      },
      pubKeyCredParams: [
        {
          type: "public-key",
          alg: -7,
        }
      ],
      authenticatorSelection: {
        authenticatorAttachment: "cross-platform",
        userVerification: "preferred",
        requireResidentKey: false
      },
      // excludeCredentials: [
      //   {
      //     id:userid,
      //     transports: [],
      //     type: "public-key"
      //   }
      // ],
      timeout: 60000,
      attestation: "direct",
    }
    console.log(json_data)
    startRegistration(json_data).then((res) => {
      console.log(res)
      axios.post("/api/register", res)
    })
  })
}
function login() {
  axios.get("/api/get_login").then((res) => {
    console.log(res)
    let ars = res.data.allowCredentials
    console.log(ars)
    var challengeid = res.data.data.challengeid;
    var userid = res.data.data.userid;
    let json_data: PublicKeyCredentialRequestOptionsJSON = {
      challenge: challengeid,
      timeout: 60000,
      rpId: "webauthn.sylu.site",
      allowCredentials: ars,
      userVerification: "discouraged",
      extensions: {},
    }
    startAuthentication(json_data).then((res) => {
      console.log(res)
      axios.post("/api/login", res)
    })
  })
}

export default function Home(this: any) {
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div>
          <Space direction="vertical" size="middle" style={{ display: 'flex' }}>
            <Input size="large" placeholder="example_username" prefix={<UserOutlined /> } ref={this.formRef} />

            <Row gutter={16}>
              <Col span={12}>
                <Button type="primary" onClick={register} block>register</Button>
              </Col>
              <Col span={12}>
                <Button type="primary" onClick={login} block>login</Button>
              </Col>
            </Row>
          </Space>
        </div>
      </main>
    </>
  )
}
